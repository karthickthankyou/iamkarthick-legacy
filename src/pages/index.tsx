import type { GetStaticProps, InferGetStaticPropsType, NextPage } from 'next'
import Head from 'next/head'
import Link from 'src/components/atoms/Link'
import { useEffect, useState } from 'react'
import { useAppDispatch, useAppSelector } from 'src/store'
import { selectCount } from 'src/store/counter'
import { increment, setCounterState } from 'src/store/counter/counterSlice'
import { NextSeo } from 'next-seo'
import Hero from 'src/components/organisms/Hero'
import SkillCard from 'src/components/organisms/SkillCard'
import Container from 'src/components/atoms/Container/Container'
import HR from 'src/components/molecules/HR/HR'

export const getStaticProps: GetStaticProps = async () => ({
  props: { data: ['Karthick', 'Ragavendran'] }, // will be passed to the page component as props
})

const Home: NextPage = ({
  data,
}: InferGetStaticPropsType<typeof getStaticProps>) => {
  const obj = { title: 'Hello World' }
  const [text, setText] = useState(JSON.stringify(obj))
  const dispatch = useAppDispatch()
  const count = useAppSelector(selectCount)
  useEffect(() => {
    dispatch(setCounterState(data))
  }, [data, dispatch])
  return (
    <div className='container mx-auto space-y-8'>
      <Head>
        <title>Create Next App</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>

      <NextSeo
        title='Karthick Ragavendran | Portfolio.'
        description='A short description goes here which says what goes here.'
      />

      <main>
        <Container>
          <Hero />
          <div className='group'>
            <div className='tracking-widest uppercase transition-all translate-y-2 opacity-0 group-hover:translate-y-0 group-hover:opacity-100 text-primary'>
              Basic Skills
            </div>

            <div className='w-full gap-4 space-y-4 columns-1 md:columns-2 lg:columns-3'>
              <SkillCard title='Javascript' experience={4}>
                <p>
                  I am fond of functional javascript. I believe that if the
                  application is made with pure functions it become super easy
                  to work with and evolve.
                </p>

                <div>
                  <Link
                    href='https://javascript.plainenglish.io/javascript-currying-practical-example-512cf1099e81'
                    className='w-4 h-4 bg-black rounded-full'
                  >
                    {'a '}
                  </Link>
                </div>
              </SkillCard>

              <SkillCard title='CSS' experience={4}>
                <p>
                  I am a big fan of utility first CSS. With tailwind, I can
                  develop UI at the speed of writing.
                </p>

                <div>
                  <Link
                    href='https://javascript.plainenglish.io/javascript-currying-practical-example-512cf1099e81'
                    className='w-4 h-4 bg-black rounded-full'
                  >
                    {'a '}
                  </Link>
                </div>
              </SkillCard>
              <SkillCard title='HTML' experience={4}>
                <p>
                  I am fond of functional javascript. I believe that if the
                  application is made with pure functions it become super easy
                  to work with and evolve.
                </p>

                <div>
                  <Link
                    href='https://javascript.plainenglish.io/javascript-currying-practical-example-512cf1099e81'
                    className='w-4 h-4 bg-black rounded-full'
                  >
                    {'a '}
                  </Link>
                </div>
              </SkillCard>
              <SkillCard title='React' experience={3.5}>
                <p>
                  I started web development with react in 2018. So my brain
                  works in a data-driven way by default.
                </p>
                <p>
                  My favorite thing about react is composability. A lot of
                  components I create are composable like mixing and matching
                  the lego pieces.
                </p>
              </SkillCard>

              <SkillCard title='Redux' experience={3.5}>
                <p>
                  I started web development with react. So my brain works in a
                  data-driven way by default.
                </p>
              </SkillCard>
              <SkillCard title='Design System' experience={2}>
                <p>
                  Anything that comprises an application should look like they
                  belong together. I have an eye to immediately detect
                  inconsistent UI.
                </p>
              </SkillCard>
              <SkillCard title='UX' experience={2}>
                <p>
                  I have worked with companies that do not have a dedicated UX
                  designer.
                </p>
                <p>
                  Following the basic rules of UX, I can design (and develop)
                  consistent looking UI that provide smoother user experience.
                </p>
              </SkillCard>

              <SkillCard title='Storybook' experience={2}>
                <p>
                  Storybook drastically changed the way I think about UI. It
                </p>
              </SkillCard>

              <SkillCard
                title='Tailwind'
                description='Lorem, ipsum dolor sit amet consectetur adipisicing elit. Hic numquam quaerat fugiat!'
              />

              <SkillCard
                title='React hook form'
                description='Lorem, ipsum dolor sit amet consectetur adipisicing elit. Hic numquam quaerat fugiat!'
              />

              <SkillCard
                title='Typescript'
                description='Lorem, ipsum dolor sit amet consectetur adipisicing elit. Hic numquam quaerat fugiat!'
              />
              <SkillCard
                title='Eslint'
                description='Lorem, ipsum dolor sit amet consectetur adipisicing elit. Hic numquam quaerat fugiat!'
              />
              <SkillCard
                title='Cypress'
                description='Lorem, ipsum dolor sit amet consectetur adipisicing elit. Hic numquam quaerat fugiat!'
              />
            </div>
          </div>
        </Container>
      </main>

      <footer className='mt-16 text-gray-500'>Next boilerplate</footer>
    </div>
  )
}

export default Home
